#server.port=8385
server.servlet.context-path=/registry

#spring.datasource.url=jdbc:postgresql://localhost:5432/registry_usa
#spring.datasource.username=postgres
#spring.datasource.password=root
#spring.datasource.driver-class-name=org.postgresql.Driver

# https://springframework.guru/how-to-configure-multiple-data-sources-in-a-spring-boot-application/
app.datasource.customer.url=jdbc:postgresql://localhost:5432/registry_security
app.datasource.customer.username=postgres
app.datasource.customer.password=root
app.datasource.customer.driver-class-name=org.postgresql.Driver

app.datasource.us-contact.url=jdbc:postgresql://localhost:5432/registry_usa
app.datasource.us-contact.username=postgres
app.datasource.us-contact.password=root
app.datasource.us-contact.driver-class-name=org.postgresql.Driver

app.datasource.canada-contact.url=jdbc:postgresql://localhost:5432/registry_canada
app.datasource.canada-contact.username=postgres
app.datasource.canada-contact.password=root
app.datasource.canada-contact.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.show-sql=true

# https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html
spring.jpa.hibernate.ddl-auto=update
#  to not let Spring Boot automatic creation the schema of an embedded DataSource
# (that is to prevent automatic performing the data.sql and schema.sql operators)
spring.datasource.initialization-mode=never

spring.queries.customer-query=select c.login, c.password, c.enabled from customers c where c.login=?
spring.queries.roles-query=select c.login, r.role from customers c inner join customer_role cr on c.id = cr.customer_id inner join roles r on r.id = cr.role_id where c.login = ?
